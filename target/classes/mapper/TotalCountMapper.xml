<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dongx.blog.mapper.TotalCountMapper">
  <resultMap id="BaseResultMap" type="com.dongx.blog.entity.TotalCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="blog_id" jdbcType="VARCHAR" property="blogId" />
    <result column="like_number" jdbcType="INTEGER" property="likeNumber" />
    <result column="reply_number" jdbcType="INTEGER" property="replyNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, blog_id, like_number, reply_number, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_total_count
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_total_count
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dongx.blog.entity.TotalCount">
    insert into blog_total_count (id, blog_id, like_number, 
      reply_number, status)
    values (#{id,jdbcType=INTEGER}, #{blogId,jdbcType=VARCHAR}, #{likeNumber,jdbcType=INTEGER}, 
      #{replyNumber,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dongx.blog.entity.TotalCount">
    insert into blog_total_count
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="likeNumber != null">
        like_number,
      </if>
      <if test="replyNumber != null">
        reply_number,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="likeNumber != null">
        #{likeNumber,jdbcType=INTEGER},
      </if>
      <if test="replyNumber != null">
        #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongx.blog.entity.TotalCount">
    update blog_total_count
    <set>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="likeNumber != null">
        like_number = #{likeNumber,jdbcType=INTEGER},
      </if>
      <if test="replyNumber != null">
        reply_number = #{replyNumber,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongx.blog.entity.TotalCount">
    update blog_total_count
    set blog_id = #{blogId,jdbcType=VARCHAR},
      like_number = #{likeNumber,jdbcType=INTEGER},
      reply_number = #{replyNumber,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="addLikeCount" parameterType="string">
    update
      blog_total_count
    set
      like_number = like_number + 1
    where
      blog_id = #{blogId, jdbcType=VARCHAR}
  </update>

  <update id="decLikeCount" parameterType="string">
    update
      blog_total_count
    set
      like_number = like_number - 1
    where
      blog_id = #{blogId, jdbcType=VARCHAR}
  </update>

  <update id="addReplyCount" parameterType="string">
    update
      blog_total_count
    set
      reply_number = reply_number + 1
    where
      blog_id = #{blogId, jdbcType=VARCHAR}
  </update>

  <select id="findLikeAndReplyCount" parameterType="string" resultMap="BaseResultMap">
    select 
      <include refid="Base_Column_List"></include>
    from 
      blog_total_count
    where
      blog_id = #{blogId, jdbcType=VARCHAR}
  </select>

  <select id="findAllOfLikeAndReplyCount" parameterType="string" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"></include>
    from
      blog_total_count
  </select>
</mapper>